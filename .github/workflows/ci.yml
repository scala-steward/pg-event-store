name: CI

env:
  JDK_JAVA_OPTIONS: -XX:+PrintCommandLineFlags

on:
  pull_request:
  push:
    branches: ['main']
  release:
    types:
      - published

jobs:
  lint:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: coursier/setup-action@v1
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Lint code
        run: sbt check

  test:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        java: ['adoptium@1.17']
        scala: ['2.13.14']
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: coursier/setup-action@v1
        with:
          jvm: ${{ matrix.java }}
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Test
        run: sbt ++${{ matrix.scala }} test


  ci:
    runs-on: ubuntu-22.04
    needs: [lint, test]
    steps:
      - name: Report successful build
        run: echo "ci passed"

  publish:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    needs: [ci]
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: coursier/setup-action@v1
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Release artifacts
        run: sbt sonatypeCentralRelease
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}